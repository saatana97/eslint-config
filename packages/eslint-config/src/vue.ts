import ts from './index';
export default {
    extends: [
        ...ts.extends,
        'plugin:vue/vue3-recommended',
        'plugin:prettier/recommended',
        '@vue/eslint-config-typescript/recommended',
        '@vue/eslint-config-prettier',
    ],
    parser: 'vue-eslint-parser',
    parserOptions: {
        ...ts.parserOptions,
        parser: '@typescript-eslint/parser',
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    env: ts.env,
    rules: {
        ...ts.rules,
        'vue/no-v-html': 'off',
        'vue/html-self-closing': [
            'warn',
            {
                html: {
                    void: 'any',
                    normal: 'any',
                    component: 'always',
                },
                svg: 'always',
                math: 'always',
            },
        ],
        'vue/multi-word-component-names': 'off',
        'vue/order-in-components': [
            'warn',
            {
                order: [
                    'el',
                    'name',
                    'key',
                    'parent',
                    'functional',
                    ['delimiters', 'comments'],
                    ['components', 'directives', 'filters'],
                    'extends',
                    'mixins',
                    ['provide', 'inject'],
                    'ROUTER_GUARDS',
                    'layout',
                    'middleware',
                    'validate',
                    'scrollToTop',
                    'transition',
                    'loading',
                    'inheritAttrs',
                    'model',
                    ['props', 'propsData'],
                    'emits',
                    'setup',
                    'fetch',
                    'asyncData',
                    'data',
                    'head',
                    'computed',
                    'watch',
                    'watchQuery',
                    'LIFECYCLE_HOOKS',
                    'methods',
                    ['template', 'render'],
                    'renderError',
                ],
            },
        ],
        'vue/attributes-order': [
            'warn',
            {
                order: [
                    'DEFINITION',
                    'LIST_RENDERING',
                    'CONDITIONALS',
                    'RENDER_MODIFIERS',
                    'GLOBAL',
                    'UNIQUE',
                    'TWO_WAY_BINDING',
                    'OTHER_DIRECTIVES',
                    'OTHER_ATTR',
                    'EVENTS',
                    'CONTENT',
                ],
                alphabetical: true,
            },
        ],
        'vue/no-side-effects-in-computed-properties': 'error',
        'vue/valid-next-tick': 'error',
        'vue/prefer-import-from-vue': 'warn',
        'vue/attribute-hyphenation': 'warn',
        'vue/component-definition-name-casing': 'warn',
        'vue/prop-name-casing': 'warn',
        'vue/require-prop-types': 'error',
        'vue/v-on-event-hyphenation': [
            'warn',
            'always',
            {
                autofix: true,
                ignore: [],
            },
        ],
        'vue/this-in-template': 'error',
        'vue/block-order': [
            'error',
            {
                order: [['template', 'script'], 'style'],
            },
        ],
        'vue/component-name-in-template-casing': 'warn',
        'vue/custom-event-name-casing': 'warn',
    },
    globals: {
        ...ts.globals,
        defineModel: 'readonly',
    },
};
